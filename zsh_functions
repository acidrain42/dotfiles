function bak() {
    if [ $# -lt 1 ]; then
        echo "Usage: $0 [-n] folder"
        return 1
    fi

    xz=1
    if [ "$1" = "-n" ]; then
        shift 1
        xz=0
    fi

    input="$(basename "$1")"
    dir="$(dirname "$1")"
    output="${input#.}.$(date +%Y%m%d-%H%M%S).tar"

    if [ "$xz" -eq 1 ]; then
        tar Jcf "${output}.xz" -C "$dir" "${input}"
    else
        tar cf "${output}" -C "$dir" "${input}"
    fi
}

function mcd() {
    [[ -d "$1" ]] || mkdir -p "$1"
    cd "$1"
}

function get_ext() {
    # http://reasoniamhere.com/2014/01/11/outrageously-useful-tips-to-master-your-z-shell/
    # :e -> Ext
    echo ${1:e}
}

function remove_ext() {
    # http://reasoniamhere.com/2014/01/11/outrageously-useful-tips-to-master-your-z-shell/
    # :t -> Tail (basename)
    # :r -> Remove ext?
    #echo ${1:t:r}
    echo ${1:r}
}

function clip() {
    cat "$1" | xsel --clipboard
}

function aur-get() {
    if [ $# -lt 1 ]; then
        echo "Usage: $0 packages"
        exit 1
    fi

    for app in "$@"; do
        git clone "https://aur.archlinux.org/${app}.git"
    done
}

function aur-clean() {
    AUR_CACHE="${TRIZEN_CACHE:-$HOME/.cache/trizen}"
    [[ -d "$AUR_CACHE" ]] || return

    pushd -q "$AUR_CACHE"

    for d in $(\diff --new-line-format="" --unchanged-line-format="" <(ls) <(pacman -Qqm)); do
        if read -s -q "?Delete $d [y/N]? "; then
            rm -rf "$d"
        fi
        echo
    done

    for d in *; do
        echo $d
        pushd -q "$d"
        git clean -xdf
        popd -q
    done

    popd -q
}

function tctest() {
    awk 'BEGIN{
        s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
        for (colnum = 0; colnum<77; colnum++) {
            r = 255-(colnum*255/76);
            g = (colnum*510/76);
            b = (colnum*255/76);
            if (g>255) g = 510-g;
            printf "\033[48;2;%d;%d;%dm", r,g,b;
            printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
            printf "%s\033[0m", substr(s,colnum+1,1);
        }
        printf "\n";
    }'
}

function colorsample {
    # Color Chart
    #: Normal      Bright
    #: --------    -------
    #: 0 Black      8 Black
    #: 1 Red        9 Red
    #: 2 Yellow    10 Yellow
    #: 3 Green     11 Green
    #: 4 Blue      12 Blue
    #: 5 Magenta   13 Magenta
    #: 6 Cyan      14 Cyan
    #: 7 White     15 White

    printf "\\e[0m Normal\\n"
    printf "\\e[30m 0. Black      \\e[90m 8. Dark Gray\\e[0m\\n"
    printf "\\e[31m 1. Red        \\e[91m 9. Light Red\\e[0m\\n"
    printf "\\e[32m 2. Green      \\e[92m10. Light Green\\e[0m\\n"
    printf "\\e[33m 3. Yellow     \\e[93m11. Light Yellow\\e[0m\\n"
    printf "\\e[34m 4. Blue       \\e[94m12. Light Blue\\e[0m\\n"
    printf "\\e[35m 5. Magenta    \\e[95m13. Light Magenta\\e[0m\\n"
    printf "\\e[36m 6. Cyan       \\e[96m14. Light Cyan\\e[0m\\n"
    printf "\\e[37m 7. Light Grey \\e[97m15. White\\e[0m\\n"
    printf "\\n"

    printf "\\e[1m Bold\\n"
    printf "\\e[1;30m 0. Black      \\e[1;90m 8. Dark Gray\\e[0m\\n"
    printf "\\e[1;31m 1. Red        \\e[1;91m 9. Light Red\\e[0m\\n"
    printf "\\e[1;32m 2. Green      \\e[1;92m10. Light Green\\e[0m\\n"
    printf "\\e[1;33m 3. Yellow     \\e[1;93m11. Light Yellow\\e[0m\\n"
    printf "\\e[1;34m 4. Blue       \\e[1;94m12. Light Blue\\e[0m\\n"
    printf "\\e[1;35m 5. Magenta    \\e[1;95m13. Light Magenta\\e[0m\\n"
    printf "\\e[1;36m 6. Cyan       \\e[1;96m14. Light Cyan\\e[0m\\n"
    printf "\\e[1;37m 7. Light Grey \\e[1;97m15. White\\e[0m\\n"
    printf "\\n"

    printf "\\e[2m Dim\\n"
    printf "\\e[2;30m 0. Black      \\e[2;90m 8. Dark Gray\\e[0m\\n"
    printf "\\e[2;31m 1. Red        \\e[2;91m 9. Light Red\\e[0m\\n"
    printf "\\e[2;32m 2. Green      \\e[2;92m10. Light Green\\e[0m\\n"
    printf "\\e[2;33m 3. Yellow     \\e[2;93m11. Light Yellow\\e[0m\\n"
    printf "\\e[2;34m 4. Blue       \\e[2;94m12. Light Blue\\e[0m\\n"
    printf "\\e[2;35m 5. Magenta    \\e[2;95m13. Light Magenta\\e[0m\\n"
    printf "\\e[2;36m 6. Cyan       \\e[2;96m14. Light Cyan\\e[0m\\n"
    printf "\\e[2;37m 7. Light Grey \\e[2;97m15. White\\e[0m\\n"
    printf "\\n"

    printf " Background Colors\\n"
    printf "\\e[40m 0. Black      \\e[100m 8. Dark Gray\\e[0m\\n"
    printf "\\e[30;41m 1. Red        \\e[101m 9. Light Red\\e[0m\\n"
    printf "\\e[30;42m 2. Green      \\e[102m10. Light Green\\e[0m\\n"
    printf "\\e[30;43m 3. Yellow     \\e[103m11. Light Yellow\\e[0m\\n"
    printf "\\e[30;44m 4. Blue       \\e[104m12. Light Blue\\e[0m\\n"
    printf "\\e[30;45m 5. Magenta    \\e[105m13. Light Magenta\\e[0m\\n"
    printf "\\e[30;46m 6. Cyan       \\e[106m14. Light Cyan\\e[0m\\n"
    printf "\\e[30;47m 7. Light Grey \\e[107m15. White\\e[0m\\n"
    printf "\\n"

    printf " Styles\\n"
    printf "\\e[1m 1. Bold\\e[0m\\n"
    printf "\\e[2m 2. Dim\\e[0m\\n"
    printf "\\e[3m 3. Italic\\e[0m\\n"
    printf "\\e[4m 4. Underline\\e[0m\\n"
    printf "\\e[5m 5. Blink (Slow)\\e[0m\\n"
    printf "\\e[6m 6. Blink (Fast)\\e[0m\\n"
    printf "\\e[7m 7. Reverse\\e[0m\\n"
    printf "\\e[8m 8. Hide\\e[0m[Hidden]\\n"
    printf "\\e[9m 9. Strikethrough\\e[0m\\n"
}

function fix-perm {
    find -type f -not -perm 644 -print0 | xargs -0 chmod 644
    find -type d -not -perm 755 -print0 | xargs -0 chmod 755
}
