function bak() {
    if [ $# -lt 1 ]; then
        echo "Usage: $0 [-n] folder"
        return 1
    fi

    xz=1
    if [ "$1" = "-n" ]; then
        shift 1
        xz=0
    fi

    input="$(basename "$1")"
    dir="$(dirname "$1")"
    output="${input#.}.$(date +%Y%m%d-%H%M%S).tar"

    if [ "$xz" -eq 1 ]; then
        tar Jcf "${output}.xz" -C "$dir" "${input}"
    else
        tar cf "${output}" -C "$dir" "${input}"
    fi
}

function mcd() {
    [[ -d "$1" ]] || mkdir -p "$1"
    cd "$1"
}

function get_ext() {
    # http://reasoniamhere.com/2014/01/11/outrageously-useful-tips-to-master-your-z-shell/
    # :e -> Ext
    echo ${1:e}
}

function remove_ext() {
    # http://reasoniamhere.com/2014/01/11/outrageously-useful-tips-to-master-your-z-shell/
    # :t -> Tail (basename)
    # :r -> Remove ext?
    #echo ${1:t:r}
    echo ${1:r}
}

function pacaur_clean() {
    [[ -z "$AURDEST" ]] && AURDEST="$HOME/.cache/pacaur"
    [[ ! -d "$AURDEST" ]] && return

    pushd -q "$AURDEST"

    for d in *; do
        if pacman -Qi $d &> /dev/null; then
            echo $d
            pushd -q $d
            git clean -xdf
            popd -q
        else
            if read -s -q "?Delete $d [y/N]? "; then
                rm -rf $d
            fi
            echo
        fi
    done

    popd -q
}
