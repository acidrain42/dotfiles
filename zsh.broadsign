hash -d db=$HOME/broadsign/db_backups

export ACIDRAIN_MOUNT="$HOME/usr/mnt/acidrain"
alias acidrainmount="sshfs acidrain.duckdns.org:/srv/data $ACIDRAIN_MOUNT"
alias acidrainumount="fusermount -u $ACIDRAIN_MOUNT"

alias pglogs='docker logs postgres -f --tail=10'
alias sqlvim="vim -c 'split | wincmd j | terminal' $HOME/broadsign/scratch.sql"

# Local
alias sqllocal='pgcli -h localhost -U postgres -d bs_sales'

# Desktop
alias sqldesktop='pgcli -h mlemay-desktop -p 5432 -U postgres -d bs_sales'
alias tundesktop='printf "\\e[33mOpening tunnel to Desktop on port 54325\\e[0m\n"; ssh -L54325:localhost:5432 mlemay-desktop'
alias sqldesktop-tun='pgcli -h localhost -p 54325 -U postgres -d bs_sales'

# QA
alias tunqa='printf "\\e[33mOpening tunnel to QA on port 54321\\e[0m\n"; ssh -L54321:qa-bs-us-east-1-sso-pg1.cbcqvvyhz8cc.us-east-1.rds.amazonaws.com:5432 aws-qa-st01'
alias sqlqa='pgcli -h localhost -p 54321 -U st_db -d stdb01'

# MasterQA
alias tunmasterqa='printf "\\e[33mOpening tunnel to MasterQA on port 54322\\e[0m\n"; ssh -L54322:qa-bs-canada-central-1-sd4-db01.ckr0t9mkdvyb.ca-central-1.rds.amazonaws.com:5432 masterqa-node01'
alias sqlmasterqa='pgcli -h localhost -p 54322 -U sd_user -d sddb'

# Beta
alias tunbeta='printf "\\e[33mOpening tunnel to Beta on port 54323\\e[0m\n"; ssh -L54323:10.102.49.92:5432 beta-node01'
alias sqlbeta='pgcli -h localhost -p 54323 -U sd_user -d sddb'

# Staging
alias tunstaging='printf "\\e[33mOpening tunnel to Staging on port 54326\\e[0m\n"; ssh -L54326:10.108.22.28:5432 staging-node01'
alias sqlstaging='pgcli -h localhost -p 54326 -U sd_user -d sddb'

# Prod
alias tunprod='printf "\\e[33mOpening tunnel to Prod on port 54324\\e[0m\n"; ssh -L54324:10.2.1.70:5432 prod-node01'
alias sqlprod='pgcli -h localhost -p 54324 -U sd_user -d sddb'

alias gv='pushd ~/src/st/app; npm i; grunt verify; popd'

if [ -e /usr/share/nvm/init-nvm.sh ]; then
    function nvm {
        unset -f nvm
        source /usr/share/nvm/init-nvm.sh
        nvm $@
    }
fi

function acidrain() {
    while true; do
        ssh $@ acidrain.duckdns.org
        [ $? -eq 255 ] || break
        sleep 5
    done
}

# ðŸ’©JS
export PATH="./node_modules/.bin:$PATH"

if [ -e  "/usr/local/opt/nvm/nvm.sh" ]; then
    function nvm() {
        unset -f nvm
        export NVM_DIR="$HOME/.nvm"
        source "/usr/local/opt/nvm/nvm.sh"

        nvm $*
    }
fi

function yd() {
    pushd ~/src/st/app
    [[ "$(node -v | cut -d . -f 1)" != "v8" ]] && nvm use lts/carbon
    yarn install
    yarn build:dev
    nvm use system
    popd

    terminal-notifier -group yarn -title "Yarn" -message "Build complete" > /dev/null
}
